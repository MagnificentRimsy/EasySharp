<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Easy.Demo</name>
    </assembly>
    <members>
        <member name="T:Easy.Demo.Commands.Command.CreateEmployeeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Easy.Demo.Commands.Handler.CreateEmployeeHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Commands.Handler.CreateEmployeeHandler.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Commands.Handler.CreateEmployeeHandler.Handle(Easy.Demo.Commands.Command.CreateEmployeeCommand,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Controllers.DemoController">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Controllers.DemoController.EntityName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.#ctor(EasySharp.Core.Queries.IQueryBus,EasySharp.Core.Commands.ICommandBus,EasySharp.Cache.Store.Redis.IRedisCacheService,EasySharp.Cache.Store.LocalStorage.IStorage,EasySharp.Pagination.ServiceUri.IUriService)">
            <summary>
            
            </summary>
            <param name="queryBus"></param>
            <param name="commandBus"></param>
            <param name="redisCacheService"></param>
            <param name="storage"></param>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.spRedisTry">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.LocalStorageDocs">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.Pagination(EasySharp.Pagination.Wrappers.PaginationFilter,System.Threading.CancellationToken)">
            <summary>
            Pagination
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.GetCars(System.Threading.CancellationToken)">
            <summary>
            Query - CRQS
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.CreateRecordTrimBefore(Easy.Demo.Models.EmployeeDto)">
            <summary>
            Trim Method
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.CreateRecord(Easy.Demo.Models.EmployeeDto)">
            <summary>
            Api Generic Msg - Object
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.CreateRecordCollection(System.Collections.Generic.IEnumerable{Easy.Demo.Models.EmployeeDto})">
            <summary>
             Api Generic Msg - Array Of Object
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Easy.Demo.Controllers.DemoController.CreateCarRecord(Easy.Demo.Models.EmployeeDto,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="dto"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Data.DataContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Data.DataContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Easy.Demo.Data.DataContext})">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:Easy.Demo.Data.DataContext.Employees">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Data.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Easy.Demo.Data.EntityConfigurations.EmployeeBankInfoConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="T:Easy.Demo.Data.EntityConfigurations.EmployeeConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Data.EntityConfigurations.EmployeeConfiguration.Build(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Easy.Demo.Data.Entity.Employee">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Data.Entity.Employee.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Data.Entity.Employee.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Data.Entity.Employee.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Data.Entity.Employee.Phone">
            <summary>
            
            </summary>
        </member>
        <member name="T:Easy.Demo.Factories.Employees.EmployeeFactory">
            <summary>
            create fake cars
            </summary>
        </member>
        <member name="M:Easy.Demo.Factories.Employees.EmployeeFactory.Create">
            <summary>
            Fake record
            </summary>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Interface.IEmployee">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Interface.IEmployee.GetEmployees">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Models.EmployeeDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Models.EmployeeDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Models.EmployeeDto.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Models.EmployeeDto.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Models.EmployeeDto.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Easy.Demo.Models.EmployeeDto.Phone">
            <summary>
            
            </summary>
        </member>
        <member name="T:Easy.Demo.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Easy.Demo.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Queries.Handler.GetAllEmployeesHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Queries.Handler.GetAllEmployeesHandler.#ctor(Easy.Demo.Interface.IEmployee)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Queries.Handler.GetAllEmployeesHandler.Handle(Easy.Demo.Queries.Query.GetAllEmployeesQuery,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Queries.Query.GetAllEmployeesQuery">
            <summary>
            
            </summary>
        </member>
        <member name="T:Easy.Demo.Repos.EmployeeRepo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Repos.EmployeeRepo.#ctor(Easy.Demo.Data.DataContext)">
            <summary>
            
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Easy.Demo.Repos.EmployeeRepo.GetEmployees">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Easy.Demo.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Easy.Demo.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Easy.Demo.Startup.Configuration">
            <summary>
             Configuration
            </summary>
        </member>
        <member name="M:Easy.Demo.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Easy.Demo.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="T:Easy.Demo.Validation.Employees.CreateEmployee">
            <summary>
             
            </summary>
        </member>
        <member name="M:Easy.Demo.Validation.Employees.CreateEmployee.#ctor">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
